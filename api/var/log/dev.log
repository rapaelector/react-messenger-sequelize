[2021-04-28T14:14:30.828378+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:14:59.302850+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:14:59.336789+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\CurlHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\CurlHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:14:59.346064+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2021-04-28T14:14:59.485791+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /apple-touch-icon-precomposed.png"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon-precomposed.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon-precomposed.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.534738+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:14:59.534890+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon-precomposed.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon-precomposed.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.536468+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432?" at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon-precomposed.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon-precomposed.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.663379+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:14:59.663491+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon-precomposed.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon-precomposed.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.746875+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.768797+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:14:59.768920+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.769282+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432?" at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.896425+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:14:59.896721+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.927766+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /apple-touch-icon.png"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.948294+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:14:59.948412+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:14:59.948666+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\ConnectionException: "An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432?" at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88 {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:15:00.068986+00:00] request.CRITICAL: Exception thrown when handling an exception (Doctrine\DBAL\Exception\ConnectionException: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php line 88) {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)"} []
[2021-04-28T14:15:00.069119+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused 	Is the server running on host "127.0.0.1" and accepting 	TCP/IP connections on port 5432? {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractPostgreSQLDriver.php:88)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] could not connect to server: Connection refused\n\tIs the server running on host \"127.0.0.1\" and accepting\n\tTCP/IP connections on port 5432? at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:39)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /apple-touch-icon.png\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/apple-touch-icon.png/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:18:13.020351+00:00] console.CRITICAL: Error thrown while running command "'make:'". Message: "Command "make:" is ambiguous. Did you mean one of these?     make:auth                  Creates a Guard authenticator of different flavors     make:command               Creates a new console command class     make:controller            Creates a new controller class     make:crud                  Creates CRUD for Doctrine entity class     make:docker:database       Adds a database container to your docker-compose.yaml file     make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource     make:fixtures              Creates a new class to load Doctrine fixtures     make:form                  Creates a new form class     make:message               Creates a new message and handler     make:messenger-middleware  Creates a new messenger middleware     make:registration-form     Creates a new registration form system     make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle     make:serializer:encoder    Creates a new serializer encoder class     make:serializer:normalizer Creates a new serializer normalizer class     make:subscriber            Creates a new event subscriber class     make:twig-extension        Creates a new Twig extension class     make:test                  Creates a new test class     make:validator             Creates a new validator and constraint class     make:voter                 Creates a new security voter class     make:user                  Creates a new security user class     make:migration             Creates a new migration based on database changes." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:\" is ambiguous.\nDid you mean one of these?\n    make:auth                  Creates a Guard authenticator of different flavors\n    make:command               Creates a new console command class\n    make:controller            Creates a new controller class\n    make:crud                  Creates CRUD for Doctrine entity class\n    make:docker:database       Adds a database container to your docker-compose.yaml file\n    make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource\n    make:fixtures              Creates a new class to load Doctrine fixtures\n    make:form                  Creates a new form class\n    make:message               Creates a new message and handler\n    make:messenger-middleware  Creates a new messenger middleware\n    make:registration-form     Creates a new registration form system\n    make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle\n    make:serializer:encoder    Creates a new serializer encoder class\n    make:serializer:normalizer Creates a new serializer normalizer class\n    make:subscriber            Creates a new event subscriber class\n    make:twig-extension        Creates a new Twig extension class\n    make:test                  Creates a new test class\n    make:validator             Creates a new validator and constraint class\n    make:voter                 Creates a new security voter class\n    make:user                  Creates a new security user class\n    make:migration             Creates a new migration based on database changes. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/console/Application.php:716)","command":"'make:'","message":"Command \"make:\" is ambiguous.\nDid you mean one of these?\n    make:auth                  Creates a Guard authenticator of different flavors\n    make:command               Creates a new console command class\n    make:controller            Creates a new controller class\n    make:crud                  Creates CRUD for Doctrine entity class\n    make:docker:database       Adds a database container to your docker-compose.yaml file\n    make:entity                Creates or updates a Doctrine entity class, and optionally an API Platform resource\n    make:fixtures              Creates a new class to load Doctrine fixtures\n    make:form                  Creates a new form class\n    make:message               Creates a new message and handler\n    make:messenger-middleware  Creates a new messenger middleware\n    make:registration-form     Creates a new registration form system\n    make:reset-password        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle\n    make:serializer:encoder    Creates a new serializer encoder class\n    make:serializer:normalizer Creates a new serializer normalizer class\n    make:subscriber            Creates a new event subscriber class\n    make:twig-extension        Creates a new Twig extension class\n    make:test                  Creates a new test class\n    make:validator             Creates a new validator and constraint class\n    make:voter                 Creates a new security voter class\n    make:user                  Creates a new security user class\n    make:migration             Creates a new migration based on database changes."} []
[2021-04-28T14:20:22.807816+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:21:43.677695+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2021-04-28T14:21:43.686350+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.690519+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.690852+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.744015+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:21:43.745406+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b1e47"},"request_uri":"http://127.0.0.1:8000/_wdt/2b1e47","method":"GET"} []
[2021-04-28T14:21:43.769932+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.770863+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.771087+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.771999+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.772211+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:43.772422+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.671234+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2021-04-28T14:21:45.674425+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.675339+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.675656+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.709511+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:21:45.715665+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebfbdb"},"request_uri":"http://127.0.0.1:8000/_wdt/ebfbdb","method":"GET"} []
[2021-04-28T14:21:45.732790+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.733719+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.733981+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.734829+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.735063+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.735289+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.903989+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /register/confirmed"" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /register/confirmed\" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/register/confirmed/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:21:45.926506+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.927296+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.927909+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.928741+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.928967+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.929178+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:45.975796+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff6acd"},"request_uri":"http://127.0.0.1:8000/_wdt/ff6acd","method":"GET"} []
[2021-04-28T14:21:46.005440+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/register/confirmed")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/register/confirmed\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:21:46.028432+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:46.029332+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:46.029635+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:46.030508+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:46.030765+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:46.030998+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.356406+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/register","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"app_register"},"request_uri":"http://127.0.0.1:8000/register/","method":"GET"} []
[2021-04-28T14:21:47.364082+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:21:47.366638+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.367618+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.367912+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.399770+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"GET"} []
[2021-04-28T14:21:47.508960+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:21:47.510640+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.511648+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.511926+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.549108+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e9c96c"},"request_uri":"http://127.0.0.1:8000/_wdt/e9c96c","method":"GET"} []
[2021-04-28T14:21:47.566008+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/register")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/register\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:21:47.588705+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.590590+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.590862+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.591863+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.592148+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:47.592441+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:49.157737+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"GET"} []
[2021-04-28T14:21:49.170153+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:21:49.171028+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:49.171917+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:49.172171+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:21:49.209675+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e29589"},"request_uri":"http://127.0.0.1:8000/_wdt/e29589","method":"GET"} []
[2021-04-28T14:22:10.371758+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2021-04-28T14:22:10.372985+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:22:10.417973+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:10.418975+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:10.419203+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:10.454735+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1fc80d"},"request_uri":"http://127.0.0.1:8000/_wdt/1fc80d","method":"GET"} []
[2021-04-28T14:22:23.038004+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2021-04-28T14:22:23.039094+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:22:23.191967+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-04-28T14:22:23.206297+00:00] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"rapaelec@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2021-04-28T14:22:23.210825+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2021-04-28T14:22:23.212765+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)' with params ["rapaelec@gmail.com", "[]", "$argon2id$v=19$m=65536,t=4,p=1$2LD3eZTMqBZ3HMGQXotDZA$WhYfLr\/FeoE7Tc71GMR1o2fWPslUdLIyHLDehOf\/eUE"]:  SQLSTATE[42S02]: Base table or view not found: 1146 Table 'react_db.user' doesn't exist" at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 61 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password) VALUES (?, ?, ?)' with params [\"rapaelec@gmail.com\", \"[]\", \"$argon2id$v=19$m=65536,t=4,p=1$2LD3eZTMqBZ3HMGQXotDZA$WhYfLr\\/FeoE7Tc71GMR1o2fWPslUdLIyHLDehOf\\/eUE\"]:\n\nSQLSTATE[42S02]: Base table or view not found: 1146 Table 'react_db.user' doesn't exist at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:61)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'react_db.user' doesn't exist at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'react_db.user' doesn't exist at /Users/rapaelec/Documents/reactmaterial/api/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:112)"} []
[2021-04-28T14:22:23.311829+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.312811+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.313029+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.314037+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.314251+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.314436+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:22:23.376317+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6571d5"},"request_uri":"http://127.0.0.1:8000/_wdt/6571d5","method":"GET"} []
[2021-04-28T14:23:03.070752+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:03.074070+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:03.074411+00:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-04-28T14:23:09.651668+00:00] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2021-04-28T14:23:09.652700+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T14:23:09.799395+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-04-28T14:23:09.799893+00:00] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"rapaelec@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2021-04-28T14:23:09.806582+00:00] doctrine.DEBUG: "COMMIT" [] []
[2021-04-28T14:23:09.810379+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:09.811555+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:09.811945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:13.088149+00:00] request.INFO: Matched route "_profiler_home". {"route":"_profiler_home","route_parameters":{"_route":"_profiler_home","_controller":"web_profiler.controller.profiler::homeAction"},"request_uri":"http://127.0.0.1:8000/_profiler/","method":"GET"} []
[2021-04-28T14:23:18.846532+00:00] request.INFO: Matched route "_profiler_search_results". {"route":"_profiler_search_results","route_parameters":{"_route":"_profiler_search_results","_controller":"web_profiler.controller.profiler::searchResultsAction","token":"empty"},"request_uri":"http://127.0.0.1:8000/_profiler/empty/search/results?limit=10","method":"GET"} []
[2021-04-28T14:23:18.853672+00:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://127.0.0.1:8000/_profiler/search_bar?limit=10","method":"GET"} []
[2021-04-28T14:23:18.920231+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/_profiler/empty/search/results?limit=10")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/_profiler/empty/search/results?limit=10\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:23:18.942261+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:18.943187+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:18.943493+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:18.944412+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:18.944706+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:23:18.944970+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:36:01.950711+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:39:58.108759+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\TraceableHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\TraceableHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-28T14:50:18.210756+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2021-04-28T14:50:18.225957+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T14:50:18.359929+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T14:50:18.400557+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:18.406375+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:18.406857+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.561282+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T14:50:42.564389+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T14:50:42.564463+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T14:50:42.564505+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T14:50:42.567378+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T14:50:42.567455+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T14:50:42.575134+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.576379+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.576728+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.631518+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/api")" at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/api\") at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-04-28T14:50:42.659395+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.660382+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.660791+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.662139+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.662617+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:50:42.662954+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:57:26.721642+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T14:57:26.724276+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T14:57:26.724393+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T14:57:26.724436+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T14:57:26.726959+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T14:57:26.727053+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T14:57:26.734691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:57:26.737485+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T14:57:26.738541+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:00:02.526874+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:00:02.528429+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:00:02.528481+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:00:02.528520+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:00:02.530298+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T15:00:02.530361+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:00:02.538577+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:00:02.541031+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:00:02.541475+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:02:54.520714+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:02:54.522963+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:02:54.523012+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:02:54.523048+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:02:54.524871+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T15:02:54.524926+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:02:54.530029+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:02:54.531109+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:02:54.531417+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:08.942992+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:03:08.944356+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:03:08.944406+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:03:08.944444+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:03:08.945914+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T15:03:08.945972+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:03:08.950882+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:08.952507+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:08.952850+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:35.655908+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:03:35.657298+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:03:35.657346+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:03:35.657383+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:03:35.658829+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T15:03:35.658883+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:03:35.663607+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:35.665061+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:03:35.665814+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:04:16.253440+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:04:16.255668+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:04:16.255715+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:04:16.255750+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:04:16.257522+00:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:70)"} []
[2021-04-28T15:04:16.257574+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:04:16.262047+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:04:16.263039+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:04:16.263370+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:05:37.762550+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:05:37.764026+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:05:37.764077+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:05:37.764118+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:05:37.764509+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T15:05:37.793898+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:05:37.796829+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:05:37.797501+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:05:38.046487+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67547b"},"request_uri":"http://127.0.0.1:8000/_wdt/67547b","method":"GET"} []
[2021-04-28T15:06:00.536921+00:00] console.CRITICAL: Error thrown while running command "api". Message: "Command "api" is not defined.  Did you mean one of these?     api:json-schema:generate     api:openapi:export     api:swagger:export" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"api\" is not defined.\n\nDid you mean one of these?\n    api:json-schema:generate\n    api:openapi:export\n    api:swagger:export at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/console/Application.php:675)","command":"api","message":"Command \"api\" is not defined.\n\nDid you mean one of these?\n    api:json-schema:generate\n    api:openapi:export\n    api:swagger:export"} []
[2021-04-28T15:07:38.533850+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:07:38.535697+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:07:38.535757+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:07:38.535803+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:07:38.536171+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T15:07:38.555767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:07:38.557665+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:07:38.557967+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:07:38.647930+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7056c3"},"request_uri":"http://127.0.0.1:8000/_wdt/7056c3","method":"GET"} []
[2021-04-28T15:08:39.026627+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:08:39.028981+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:08:39.029066+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:08:39.029125+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:08:39.029709+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T15:08:39.034582+00:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/AccessListener.php:106)"} []
[2021-04-28T15:08:39.035087+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2021-04-28T15:08:39.040546+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:39.043452+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:39.043991+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:50.005506+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2021-04-28T15:08:50.007187+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T15:08:50.007246+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:08:50.007288+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T15:08:50.007741+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2021-04-28T15:08:50.025505+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:50.027629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:50.027971+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:08:50.122613+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"06b10e"},"request_uri":"http://127.0.0.1:8000/_wdt/06b10e","method":"GET"} []
[2021-04-28T15:15:33.766390+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2021-04-28T15:15:33.772380+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T15:15:33.911980+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T15:15:33.932865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:15:33.939161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:15:33.939705+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:16:40.359006+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2021-04-28T15:16:40.372039+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T15:16:40.510702+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T15:16:40.522580+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:16:40.527276+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T15:16:40.527663+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.510879+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.517504+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.517858+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.555219+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:06:08.565329+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "Invalid JSON." at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): Invalid JSON. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)"} []
[2021-04-28T16:06:08.575413+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.576350+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.576725+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.577810+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.578175+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:06:08.578524+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.155798+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:07:43.159633+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "Invalid JSON." at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): Invalid JSON. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)"} []
[2021-04-28T16:07:43.168920+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.170721+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.171090+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.172558+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.172943+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:07:43.173304+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.858092+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:09:34.863077+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "username" must be provided." at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 111 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"username\" must be provided. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:111)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"username\" in class \"stdClass\". at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/property-access/PropertyAccessor.php:461)"} []
[2021-04-28T16:09:34.869605+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.870953+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.871427+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.872700+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.873023+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:09:34.873360+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:11:19.489228+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:11:19.492882+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:11:19.640438+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:11:19.648623+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:11:19.650509+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:11:19.651029+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:21:19.058102+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:21:19.071318+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:21:19.219673+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:21:19.227628+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:21:19.232822+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:21:19.233441+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:24:33.232634+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:24:33.239554+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:24:33.381178+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:24:33.386160+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:24:33.387346+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:24:33.387744+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:40.811924+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:25:40.818981+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:25:40.960762+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:25:40.964702+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:40.965859+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:40.966261+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:51.997067+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:25:52.003444+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:25:52.152391+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:25:52.177140+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:52.178955+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:25:52.179378+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:26:36.169172+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:26:36.175989+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:26:36.324293+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:26:36.328691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:26:36.333057+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:26:36.333470+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:29:24.997421+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:29:25.004365+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:29:25.155773+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:29:25.161888+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:29:25.166420+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:29:25.167052+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:35:08.346281+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:35:08.353286+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:35:08.499563+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:35:08.504817+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:35:08.508072+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:35:08.508578+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:37:05.138059+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:37:05.147360+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:37:05.294558+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:37:05.299794+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:37:05.303092+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:37:05.303553+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:38:03.690797+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:38:03.697920+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:38:03.849331+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:38:03.854552+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:38:03.857686+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:38:03.858184+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:39:07.583377+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:39:07.591100+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:39:07.734107+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:39:07.738552+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:39:07.739780+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:39:07.740157+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:50:38.754164+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:50:38.762767+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:50:38.910388+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:50:38.916001+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:50:38.920089+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:50:38.920579+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:58:12.286925+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:58:12.295117+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:58:12.434102+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:58:12.438998+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:58:12.443242+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:58:12.443676+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:59:04.319350+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T16:59:04.327447+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T16:59:04.478412+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T16:59:04.483580+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:59:04.487122+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T16:59:04.487660+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:03:20.576531+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:03:20.585967+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:03:20.727764+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:03:20.733862+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:03:20.737789+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:03:20.738436+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.455716+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.463144+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.463634+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.504720+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:08:46.511464+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:08:46.666017+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:08:46.669123+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.670276+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:08:46.670668+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:19:26.899319+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:19:26.907681+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:19:27.057753+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:19:27.063935+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:19:27.067974+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:19:27.068477+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:20:18.487457+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:20:18.495930+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:20:18.646346+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:20:18.651958+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:20:18.656133+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:20:18.656660+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:23:46.197323+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:23:46.204708+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:23:46.351018+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:23:46.356316+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:23:46.359971+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:23:46.360477+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:25:55.052399+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:25:55.063194+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:25:55.216145+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:25:55.221717+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:25:55.225726+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:25:55.226282+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:28:20.811724+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:28:20.819117+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:28:20.967902+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:28:20.973848+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:28:20.977265+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:28:20.977731+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:29:54.864329+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:29:54.871946+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:29:55.024732+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:29:55.030622+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:29:55.034782+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:29:55.035290+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:31:34.640012+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:31:34.647685+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:31:34.795290+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:31:34.800899+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:31:34.805306+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:31:34.805867+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:36.484660+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:32:36.492105+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:32:36.645085+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:32:36.650293+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:36.653634+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:36.654177+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:47.104641+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:32:47.111239+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:32:47.257752+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T17:32:47.278868+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:47.279962+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:32:47.280522+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:15.682582+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:39:15.689714+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:39:15.833248+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:39:15.838855+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:15.843054+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:15.843680+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:33.285958+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:39:33.293231+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:39:33.440463+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T17:39:33.450205+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:33.451350+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:39:33.451848+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:41.307240+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:44:41.316217+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:44:41.461124+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T17:44:41.467017+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:41.471517+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:41.472067+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:51.189543+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:44:51.196597+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:44:51.341547+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T17:44:51.350870+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:51.352065+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:44:51.352653+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:50:50.028199+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T17:50:50.037129+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T17:50:50.180489+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T17:50:50.189917+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:50:50.193906+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T17:50:50.194410+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:11.908057+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:11.915962+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:11.916522+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:11.953625+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:10:11.960272+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:10:12.103453+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:10:12.111525+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:12.112619+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:10:12.113020+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:52.952702+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:52.961427+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:52.963072+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:53.008166+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:24:53.010429+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:24:53.010514+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.010578+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.030811+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.036672+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:24:53.038636+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.038839+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.038880+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:24:53.088139+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:24:53.148317+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:53.150764+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:24:53.151187+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.697327+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.719545+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.722272+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.786163+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:26:16.787156+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:26:16.787232+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.787292+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.789377+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.798928+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:26:16.799840+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.800003+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.800049+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:26:16.802738+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:26:16.805967+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:26:16.823713+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.829287+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.830546+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.832724+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.834116+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:26:16.834851+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:03.504099+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:27:03.505295+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:27:03.505343+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.505387+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.506393+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.521053+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:27:03.522091+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.522247+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.522287+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:03.525576+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:27:03.534574+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:03.536671+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:03.537400+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.123811+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:27:28.125906+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:27:28.125975+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.126024+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.127680+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.137013+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:27:28.138641+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.138897+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.138967+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:27:28.143260+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:27:28.146315+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:27:28.152324+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.154675+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.155431+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.157141+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.157702+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:27:28.158123+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:30:30.968683+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:30:30.969861+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:30:30.969911+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.969977+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.971233+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.984428+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:30:30.985938+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.986224+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.986327+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:30:30.989262+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:30:30.997480+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:30:31.000197+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:30:31.001788+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.030856+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:31:09.032178+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:31:09.032233+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.032280+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.033870+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.062032+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:31:09.065194+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.065463+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.065544+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:31:09.069310+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:31:09.072563+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:31:09.078764+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.082613+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.083631+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.086209+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.086741+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:31:09.087155+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:32:17.434235+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:32:17.440285+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:32:17.440355+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.440408+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.441776+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.449766+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:32:17.460467+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.460793+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.460860+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:32:17.462807+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:32:17.470958+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:32:17.473939+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:32:17.474489+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:05.894023+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:38:05.896401+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:38:05.896558+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.896641+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.899011+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.908531+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:38:05.909484+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.909670+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.909720+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:05.912703+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:38:05.934463+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:05.936713+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:05.937185+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.256535+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:38:26.258951+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:38:26.259078+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.259176+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.260896+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.269513+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:38:26.271617+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.271867+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.271962+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:38:26.274578+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:38:26.277203+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:38:26.283178+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.313639+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.315156+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.342614+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.343545+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:38:26.343991+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.718202+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:39:09.719256+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:39:09.719311+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.719358+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.720479+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.725996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:39:09.726744+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.726872+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.726912+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:39:09.728603+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:39:09.730707+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:39:09.736054+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.742631+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.743104+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.744471+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.744824+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:39:09.745199+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.015599+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:41:19.020869+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:41:19.165042+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:41:19.177873+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.183068+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.183539+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.268458+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:41:19.269818+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:41:19.269879+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.269929+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.271176+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.275972+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:41:19.277170+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.277265+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.277300+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:41:19.279584+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:41:19.281494+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:41:19.284753+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.285695+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.286021+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.287316+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.287700+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:41:19.288027+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.224532+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:42:07.232612+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:42:07.393623+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:42:07.404506+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.410273+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.410793+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.488562+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/users/3","method":"GET"} []
[2021-04-28T18:42:07.489914+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:42:07.489964+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.490012+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.491243+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.495361+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:42:07.496870+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.496988+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.497029+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:07.499089+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [3] []
[2021-04-28T18:42:07.500857+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /Users/rapaelec/Documents/reactmaterial/api/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2021-04-28T18:42:07.503927+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.504857+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.505193+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.506351+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.506657+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:07.506985+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:48.780185+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:42:48.799245+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:42:48.951599+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:42:48.964192+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:48.977435+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:49.001592+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:49.084593+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:42:49.087183+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:42:49.087296+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.087370+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.088730+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.092958+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:42:49.095275+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.095392+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.095434+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:42:49.098378+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:42:49.134482+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:49.135680+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:42:49.136058+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:05.797401+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:43:05.798599+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:43:05.798663+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.798712+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.799557+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.804577+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:43:05.805378+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.805500+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.805540+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:05.807606+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:43:05.813639+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:05.814775+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:05.815311+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:11.062436+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:43:11.064764+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:43:11.064840+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:11.064894+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:11.072987+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:11.075378+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:43:11.086487+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:11.089736+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:43:11.091180+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:43.368117+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:44:43.375412+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:44:43.529070+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2021-04-28T18:44:43.534245+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:43.538138+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:43.538683+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.441486+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:44:59.449602+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:44:59.604181+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:44:59.612845+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.616661+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.617168+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.693964+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:44:59.694666+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:44:59.694719+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.694782+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.695786+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.700163+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:44:59.700772+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.700863+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.700901+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:44:59.702496+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:44:59.706655+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.707597+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:44:59.707922+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:11.552450+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:45:11.553672+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:45:11.553747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.553810+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.555065+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.562789+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:45:11.564059+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.564247+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.564321+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:11.568255+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:45:11.577613+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:11.584312+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:11.584861+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:15.962159+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:45:15.964589+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:45:15.964782+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.964878+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.966349+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.991127+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:45:15.992188+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.992370+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.992423+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:15.995263+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:45:16.013727+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:16.015424+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:16.015952+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:24.447225+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:45:24.448653+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:45:24.448713+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:24.448761+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:24.449871+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:24.450304+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:45:24.456489+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:24.457706+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:45:24.458136+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.072979+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-28T18:46:29.089048+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:46:29.281742+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-28T18:46:29.293475+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.297322+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.297785+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.382532+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:46:29.383871+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:46:29.383922+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.383969+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.385255+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.390412+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:46:29.391224+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.391335+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.391374+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:46:29.393586+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:46:29.416865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.418019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:46:29.418359+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:33.404765+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:55:33.412871+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:55:33.412948+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.413010+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.414564+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.428808+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:55:33.429621+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.429767+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.429811+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:33.434297+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:55:33.445083+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:33.450991+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:33.451420+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:48.635622+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T18:55:48.637634+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T18:55:48.637719+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.637785+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.639783+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.653597+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T18:55:48.656925+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.657149+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.657206+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T18:55:48.659987+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T18:55:48.668004+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:48.670689+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T18:55:48.671314+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:01:43.431405+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:01:43.432700+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:01:43.432755+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.432803+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.434157+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.442098+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:01:43.443355+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.443523+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.443565+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:01:43.446805+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:01:43.456583+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:01:43.474330+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:01:43.474758+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:03:20.279615+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:03:20.281160+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:03:20.281222+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.281270+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.282861+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.289027+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:03:20.311625+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.311836+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.311879+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:03:20.314520+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:03:20.321882+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:03:20.324376+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:03:20.324730+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:04:11.604241+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:04:11.606332+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:04:11.606419+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.606489+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.608217+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.620088+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:04:11.646809+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.647019+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.647072+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:04:11.650185+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:04:11.671361+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:04:11.679644+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:04:11.680311+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:06:24.891745+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:06:24.894032+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:06:24.894121+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.894184+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.896466+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.906779+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:06:24.907773+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.907949+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.907996+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:06:24.910264+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:06:24.920849+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:06:24.924719+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:06:24.925416+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.060025+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:09:48.061832+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:09:48.061897+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.061957+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.063627+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.075003+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:09:48.076149+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.076330+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.076377+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.078758+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:09:48.087183+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.089656+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.092447+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.138788+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:09:48.139601+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:09:48.139668+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.139733+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.140408+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.145418+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:09:48.146498+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.146635+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.146687+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:09:48.148120+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:09:48.154765+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.156338+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:09:48.156957+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:18.207485+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:18.208600+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:18.208654+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.208706+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.209446+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.215044+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:18.216025+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.216174+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.216221+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:18.218178+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:18.226230+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:18.227802+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:18.228298+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:24.160104+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:24.161465+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:24.161533+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.161582+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.162576+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.168733+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:24.170216+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.170368+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.170410+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:24.172675+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:24.179242+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:24.180565+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:24.181052+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:25.171858+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:25.172474+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:25.172532+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.172585+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.173084+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.176738+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:25.177382+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.177480+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.177522+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:25.178692+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:25.182824+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:25.183978+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:25.184365+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:27.148861+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:27.149946+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:27.149999+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.150048+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.150955+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.156481+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:27.157327+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.157458+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.157500+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:27.160695+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:27.169663+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:27.171028+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:27.171584+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:28.474548+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:28.475146+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:28.475199+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.475248+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.475721+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.479050+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:28.479777+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.479878+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.479918+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:28.480952+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:28.486385+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:28.488419+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:28.492019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:31.172277+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:31.173448+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:31.173507+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.173559+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.174319+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.179408+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:31.180396+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.180560+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.180610+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:31.183283+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:31.189235+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:31.190372+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:31.190719+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:34.824909+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:10:34.825988+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:10:34.826047+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.826096+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.826820+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.831518+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:10:34.832902+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.833030+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.833069+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:10:34.834747+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:10:34.840648+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:34.842481+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:10:34.846316+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:20.219950+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:11:20.221103+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:11:20.221160+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.221216+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.222647+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.228418+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:11:20.229242+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.229378+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.229421+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:20.231298+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:11:20.237847+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:20.240397+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:20.240789+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:39.204873+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:11:39.206144+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:11:39.206207+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.206262+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.207140+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.214172+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:11:39.215025+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.215169+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.215214+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:39.217237+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:11:39.223411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:39.224649+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:39.225060+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:47.154428+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:11:47.155547+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:11:47.155601+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.155652+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.156396+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.161363+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:11:47.162082+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.162199+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.162241+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:47.163897+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:11:47.169581+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:47.170893+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:47.171296+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:48.195108+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:11:48.195775+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:11:48.195835+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.195892+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.196597+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.201126+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:11:48.202010+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.202193+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.202251+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:11:48.203888+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:11:48.209040+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:48.210945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:11:48.211676+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:15:03.743431+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:15:03.744692+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:15:03.744747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.744794+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.746091+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.757632+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:15:03.759135+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.759314+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.759360+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:15:03.762202+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:15:03.773873+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:15:03.776038+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:15:03.776909+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:18:11.812339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:18:11.814141+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:18:11.814211+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.814274+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.815844+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.832048+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:18:11.833855+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.834060+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.834114+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:18:11.837193+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:18:11.845616+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:18:11.849344+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:18:11.852910+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:20:13.518449+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:20:13.519864+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:20:13.519935+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.519985+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.521324+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.530513+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:20:13.531356+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.531496+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.531536+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:20:13.535170+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:20:13.544299+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:20:13.546507+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:20:13.547191+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:43.227404+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:43.228782+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:43.228856+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.228912+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.230017+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.237394+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:43.238314+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.238468+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.238511+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:43.240632+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:43.247684+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:43.248852+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:43.249389+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:44.721948+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:44.722828+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:44.722908+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.722966+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.723614+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.728424+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:44.729322+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.729438+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.729476+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:44.730685+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:44.735468+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:44.736691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:44.737079+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:45.609519+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:45.610611+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:45.610730+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.610810+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.611418+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.616865+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:45.617562+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.617680+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.617723+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:45.618935+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:45.623311+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:45.624658+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:45.625239+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:46.406758+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:46.408439+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:46.408531+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.408605+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.410046+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.420480+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:46.421451+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.421586+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.421627+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:46.423364+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:46.432010+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:46.433362+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:46.433896+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:47.738763+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:47.739352+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:47.739404+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.739455+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.740024+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.746091+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:47.747420+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.747557+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.747609+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:47.749218+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:47.754202+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:47.755399+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:47.755939+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:48.623418+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:48.624094+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:48.624153+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.624207+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.624720+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.629408+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:48.630261+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.630393+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.630442+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:48.631617+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:48.636555+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:48.637909+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:48.638484+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:51.940451+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:51.941596+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:51.941653+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.941706+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.942462+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.948943+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:51.949760+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.949891+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.949935+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:51.951882+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:51.957296+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:51.958497+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:51.958893+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:52.998777+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:21:52.999466+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:21:52.999529+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:52.999587+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:53.000116+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:53.004067+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:21:53.004756+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:53.004910+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:53.004979+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:21:53.006141+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:21:53.010821+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:53.012037+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:21:53.012461+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:12.626557+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:12.627578+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:12.627628+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.627674+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.628334+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.633093+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:12.634443+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.634570+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.634611+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:12.636204+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:12.641969+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:12.643533+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:12.644216+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:16.382241+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:16.383828+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:16.383914+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.383972+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.385546+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.395008+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:16.396700+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.396876+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.396922+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:16.399289+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:16.405797+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:16.407036+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:16.407419+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:17.643917+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:17.645030+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:17.645140+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.645216+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.645853+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.651195+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:17.652304+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.652433+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.652478+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:17.653788+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:17.658324+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:17.659684+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:17.660323+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:18.430581+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:18.431479+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:18.431592+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.431678+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.432264+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.436447+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:18.437188+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.437308+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.437355+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:18.438494+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:18.443058+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:18.444419+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:18.444896+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.016943+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:20.018267+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:20.018355+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.018427+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.019463+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.024925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:20.025694+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.025822+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.025864+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.027774+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:20.033383+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.034580+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.035000+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.966998+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:22:20.967698+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:22:20.967760+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.967814+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.968392+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.972995+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:22:20.973709+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.973855+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.973898+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:22:20.975022+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:22:20.980084+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.981303+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:22:20.981709+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.060834+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.062508+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.062882+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.105227+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:32.106528+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:32.106634+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.106738+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.108883+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.115419+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:32.116214+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.116365+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.116408+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:32.118839+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:32.126151+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.127472+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:32.127970+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:38.172862+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:38.174416+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:38.174497+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.174555+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.175733+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.183954+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:38.185164+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.185377+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.185432+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:38.187800+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:38.195642+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:38.196872+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:38.197276+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:39.508071+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:39.508896+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:39.508982+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.509039+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.509578+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.513418+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:39.514162+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.514358+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.514438+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:39.515792+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:39.520367+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:39.521416+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:39.521802+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:40.193477+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:40.194055+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:40.194106+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.194153+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.194602+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.197807+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:40.198431+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.198525+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.198563+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:40.199574+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:40.204054+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:40.205309+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:40.205682+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.121378+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:42.122804+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:42.122878+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.122952+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.124234+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.130112+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:42.130969+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.131117+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.131162+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.133016+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:42.139780+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.141517+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.141959+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.641747+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:42.642442+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:42.642505+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.642560+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.643107+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.647596+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:42.648274+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.648382+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.648424+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:42.649592+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:42.654082+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.655180+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:42.655619+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:44.045211+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:44.045906+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:44.045966+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.046020+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.046549+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.050888+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:44.052299+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.052420+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.052467+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:44.053721+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:44.058388+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:44.059636+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:44.060100+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:45.552977+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:45.554159+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:45.554228+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.554283+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.555059+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.562260+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:45.563103+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.563246+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.563294+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:45.565060+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:45.570441+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:45.571623+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:45.572072+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:47.553304+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:26:47.554120+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:26:47.554195+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.554252+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.554836+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.569502+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:26:47.571505+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.571675+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.571736+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:26:47.573317+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:26:47.579991+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:47.581554+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:26:47.582220+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:10.399973+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:10.401304+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:10.401370+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.401423+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.402145+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.407142+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:10.408544+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.408675+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.408724+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:10.410745+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:10.416499+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:10.417601+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:10.417949+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:13.068214+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:13.069704+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:13.069776+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.069831+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.070681+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.078024+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:13.079446+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.079735+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.079841+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:13.081928+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:13.088002+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:13.089801+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:13.090451+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:14.345892+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:14.346671+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:14.346741+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.346796+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.347390+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.351313+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:14.352323+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.352476+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.352521+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:14.353780+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:14.358788+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:14.361794+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:14.362280+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:15.143747+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:15.144438+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:15.144503+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.144562+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.145189+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.149986+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:15.150695+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.150811+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.150855+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:15.152227+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:15.157161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:15.158387+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:15.158786+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.177087+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:16.178220+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:16.178298+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.178355+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.179092+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.184467+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:16.185301+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.185440+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.185483+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.187186+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:16.193198+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.194282+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.194635+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.730923+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:16.731554+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:16.731613+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.731664+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.732242+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.736328+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:16.736952+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.737061+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.737100+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:16.738162+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:16.743263+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.744373+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:16.744759+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:18.643966+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:18.645186+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:18.645307+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.645388+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.645960+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.649585+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:18.650197+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.650295+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.650333+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:18.651471+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:18.655565+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:18.656737+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:18.657179+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:19.271824+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:19.273216+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:19.273337+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.273429+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.274461+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.279881+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:19.280723+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.280862+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.280940+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:19.282786+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:19.288089+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:19.289313+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:19.289879+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.054748+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:20.055842+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:20.055966+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.056050+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.056831+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.060977+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:20.061683+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.061798+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.061842+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.062961+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:20.067387+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.068737+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.069207+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.840894+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:20.842120+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:20.842331+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.842471+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.843238+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.847899+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:20.848563+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.848668+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.848711+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:20.849819+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:20.854218+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.855367+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:20.855788+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:21.810701+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:21.811430+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:21.811500+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.811555+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.812151+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.820683+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:21.821589+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.821744+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.821806+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:21.823577+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:21.831878+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:21.833426+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:21.833923+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:22.786748+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:22.787965+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:22.788025+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.788083+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.788892+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.794144+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:22.794907+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.795033+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.795075+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:22.796884+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:22.802141+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:22.803219+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:22.803604+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:23.584558+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:23.585201+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:23.585256+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.585308+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.585806+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.590619+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:23.591318+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.591430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.591475+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:23.592659+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:23.597229+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:23.598574+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:23.599143+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:26.424378+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:26.425575+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:26.425640+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.425792+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.426684+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.431796+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:26.432624+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.432771+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.432814+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:26.434609+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:26.440738+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:26.442046+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:26.442413+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:29.981883+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:27:29.983059+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:27:29.983117+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.983171+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.983969+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.988905+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:27:29.989766+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.989920+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.989986+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:27:29.991822+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:27:29.999113+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:30.000286+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:27:30.000749+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:14.046376+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:14.047644+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:14.047697+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.047745+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.049365+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.055971+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:14.057009+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.057175+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.057216+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:14.059452+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:14.068352+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:14.071502+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:14.072386+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:18.007951+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:18.009515+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:18.009590+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.009645+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.010679+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.019652+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:18.020598+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.020757+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.020800+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:18.024006+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:18.031422+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:18.032620+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:18.032998+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:19.403964+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:19.404672+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:19.404748+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.404848+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.405698+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.410677+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:19.412171+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.412293+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.412335+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:19.413654+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:19.418155+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:19.419212+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:19.419567+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:23.435486+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:23.437306+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:23.437412+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.437488+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.438415+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.443474+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:23.444311+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.444446+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.444488+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:23.446394+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:23.451834+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:23.452963+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:23.453331+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:24.210727+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:24.211504+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:24.211579+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.211639+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.212192+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.216022+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:24.217253+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.217418+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.217477+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:24.218884+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:24.224261+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:24.225440+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:24.225862+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.004771+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:25.005780+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:25.005877+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.005968+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.006930+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.010914+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:25.011605+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.011718+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.011761+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.012965+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:25.017430+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.018508+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.018883+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.506998+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:25.507671+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:25.507736+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.507788+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.508306+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.512527+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:25.513221+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.513338+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.513399+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:25.514609+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:25.519196+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.520418+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:25.520836+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:26.364989+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:26.366515+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:26.366593+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.366650+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.367463+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.373230+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:26.374188+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.374322+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.374365+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:26.376156+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:26.381801+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:26.382930+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:26.383316+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:27.259282+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:27.259993+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:27.260730+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.260819+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.261402+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.265981+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:27.266784+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.266907+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.266950+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:27.268107+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:27.273170+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:27.274491+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:27.274907+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:28.288385+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:28.289586+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:28.289675+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.289734+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.290305+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.295440+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:28.296133+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.296251+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.296295+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:28.297543+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:28.302456+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:28.303649+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:28.304089+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.071022+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:29.072872+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:29.072974+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.073078+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.074401+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.080929+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:29.081996+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.082136+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.082178+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.083936+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:29.089770+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.091933+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.092482+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.832582+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:29.833312+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:29.833385+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.833444+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.834161+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.838140+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:29.840150+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.840277+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.840330+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:29.841495+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:29.846037+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.847302+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:29.848630+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:30.323826+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:30.324360+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:30.324406+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.324447+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.324854+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.328791+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:30.329969+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.330069+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.330103+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:30.331020+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:30.334478+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:30.335424+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:30.335713+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:31.295371+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:31.296225+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:31.296332+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.296430+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.297162+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.301667+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:31.304135+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.304259+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.304303+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:31.305464+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:31.309943+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:31.311167+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:31.311578+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:32.585909+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:32.587088+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:32.587148+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.587203+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.588258+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.593572+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:32.594364+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.594527+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.594575+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:32.596352+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:32.601902+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:32.603081+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:32.603513+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:33.541063+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:33.541769+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:33.541836+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.541891+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.542460+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.547167+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:33.547859+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.547973+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.548017+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:33.549318+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:33.554333+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:33.555797+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:33.556323+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:34.384203+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:34.384891+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:34.384951+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.385007+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.385559+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.389748+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:34.390426+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.390537+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.390579+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:34.391698+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:34.396169+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:34.397337+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:34.397762+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:35.327916+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:35.332184+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:35.332295+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.332378+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.333621+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.341042+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:35.342109+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.342277+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.342326+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:35.344475+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:35.350040+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:35.351086+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:35.351450+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:36.339466+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:29:36.340418+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:29:36.340513+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.340589+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.341329+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.345421+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:29:36.346125+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.346238+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.346280+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:29:36.347412+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:29:36.352071+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:36.353223+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:29:36.353628+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:30:57.030517+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:30:57.031732+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:30:57.031798+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.031851+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.033137+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.040728+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:30:57.042094+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.042265+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.042314+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:30:57.045386+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:30:57.053692+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:30:57.056072+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:30:57.056708+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.761791+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:22.764234+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:22.764374+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.764493+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.766385+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.775942+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:22.777578+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.777806+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.777857+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.781535+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:22.792702+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.794395+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.795133+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.868284+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:22.869445+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:22.869565+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.869707+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.870932+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.878464+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:22.879371+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.879571+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.879633+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:22.881055+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:22.886186+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.888459+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:22.889053+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:23.206557+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:23.207214+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:23.207273+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.207326+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.207828+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.211272+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:23.211924+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.212026+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.212067+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:23.213177+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:23.217608+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:23.218884+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:23.219392+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:28.212631+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:28.215021+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:28.216819+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.216900+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.218431+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.229795+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:28.230824+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.231062+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.231124+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:28.233754+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:28.242459+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:28.244517+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:28.245235+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:32.436017+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:32.437210+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:32.437269+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.437323+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.438194+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.444272+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:32.445479+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.445652+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.445701+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:32.448185+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:32.455588+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:32.456981+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:32.457436+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:35.966966+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:35.968524+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:35.968596+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.968647+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.969364+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.977179+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:35.977987+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.978113+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.978154+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:35.979826+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:35.985137+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:35.986538+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:35.987022+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:41.565508+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:41.566563+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:41.566614+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.566664+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.567363+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.573241+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:41.574034+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.574166+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.574208+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:41.576326+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:41.581794+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:41.582896+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:41.583231+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:44.035484+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:44.037383+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:44.037497+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.037611+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.038846+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.045311+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:44.047260+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.047405+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.047452+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:44.049286+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:44.055668+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:44.056892+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:44.057325+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:47.122238+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:31:47.123338+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:31:47.123398+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.123449+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.124168+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.129218+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:31:47.130093+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.130232+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.130276+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:31:47.132619+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:31:47.141935+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:47.163336+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:31:47.165143+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:33:45.997671+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:33:45.998972+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:33:45.999025+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:45.999074+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:46.000580+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:46.008068+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:33:46.009845+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:46.010007+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:46.010048+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:33:46.012124+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:33:46.019192+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:33:46.022229+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:33:46.023321+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:04.080339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:04.081726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:04.081779+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.081827+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.083173+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.089400+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:04.090213+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.090350+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.090389+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:04.092339+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:04.098382+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:04.100299+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:04.100942+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:08.125582+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:08.126658+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:08.126712+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.126760+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.127479+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.135059+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:08.135842+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.135984+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.136025+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:08.137722+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:08.143737+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:08.144953+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:08.145357+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:13.096769+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:13.098668+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:13.098746+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.098802+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.099620+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.107326+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:13.109168+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.109315+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.109362+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:13.111492+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:13.118056+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:13.119723+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:13.120206+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:16.892092+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:16.893236+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:16.893292+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.893345+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.894126+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.899057+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:16.901299+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.901550+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.901614+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:16.903791+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:16.909559+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:16.910681+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:16.911067+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:18.271629+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:18.272373+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:18.272468+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.272532+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.273284+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.278646+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:18.279950+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.280070+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.280114+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:18.281247+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:18.285924+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:18.287107+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:18.287531+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:20.906757+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:20.908679+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:20.908794+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.908883+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.911035+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.921511+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:20.922773+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.922959+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.923019+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:20.925763+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:20.932606+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:20.934271+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:20.935228+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:23.211676+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:34:23.213148+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:34:23.213227+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.213284+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.214385+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.221052+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:34:23.221893+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.222029+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.222075+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:34:23.223885+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:34:23.229620+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:23.231590+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:34:23.232148+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:13.409239+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:13.410338+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:13.410384+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.410425+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.411566+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.417668+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:13.419556+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.419701+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.419742+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:13.421779+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:13.428030+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:13.429779+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:13.430249+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:15.023494+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:15.024368+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:15.024447+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.024502+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.025039+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.028556+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:15.029170+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.029278+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.029319+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:15.030505+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:15.035518+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:15.036622+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:15.036993+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:16.033650+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:16.034864+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:16.034927+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.035012+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.035915+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.041998+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:16.042875+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.043010+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.043053+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:16.044833+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:16.050824+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:16.052044+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:16.052402+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.225412+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:17.226184+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:17.226254+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.226310+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.226894+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.231382+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:17.232432+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.232590+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.232649+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.234099+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:17.238831+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.240405+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.240882+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.936686+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:17.937696+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:17.937786+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.937861+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.940483+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.966898+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:17.968587+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.968771+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.968829+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:17.970595+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:17.984652+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.986607+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:17.987253+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.251310+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:20.252749+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:20.252923+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.252991+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.254334+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.261583+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:20.262357+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.262501+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.262542+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.264623+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:20.271423+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.272595+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.272944+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.763137+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:20.763768+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:20.763826+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.763876+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.764476+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.768755+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:20.771043+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.771145+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.771186+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:20.772232+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:20.776555+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.777684+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:20.778102+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:33.545475+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:33.546713+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:33.546774+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.546828+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.548178+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.554032+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:33.554743+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.554860+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.554901+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:33.556552+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:33.561950+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:33.564032+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:33.564411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.019025+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:35.019704+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:35.019763+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.019816+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.020328+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.023999+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:35.025838+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.025973+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.026017+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.027242+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:35.031816+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.033277+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.033821+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.774539+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:35.775223+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:35.775284+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.775338+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.775862+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.779720+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:35.780458+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.780589+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.780632+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:35.782039+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:35.787006+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.788122+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:35.788495+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:36.560241+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:36.562059+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:36.562160+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.562240+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.563416+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.572356+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:36.574569+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.574783+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.574848+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:36.576969+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:36.584759+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:36.586246+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:36.586807+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:37.124495+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:36:37.125157+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:36:37.125216+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.125268+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.125772+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.129856+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:36:37.130583+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.130700+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.130743+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:36:37.132132+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:36:37.136924+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:37.138097+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:36:37.138481+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:39:38.044823+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:39:38.046396+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:39:38.046466+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.046518+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.048080+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.053844+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:39:38.055982+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.056135+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.056175+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:39:38.058345+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:39:38.066243+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:39:38.067883+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:39:38.068552+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:09.372052+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:09.373766+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:09.373871+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.373949+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.375734+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.383748+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:09.384624+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.384777+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.384820+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:09.387232+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:09.393785+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:09.395901+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:09.396489+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.242061+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:11.242824+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:11.242905+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.242969+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.243578+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.248812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:11.250744+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.250855+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.250895+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.252018+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:11.257510+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.258697+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.259122+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.726553+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:11.727193+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:11.727250+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.727303+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.727858+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.733262+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:11.733930+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.734045+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.734087+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:11.735169+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:11.740659+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.741759+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:11.742102+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:16.657133+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:16.658227+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:16.658286+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.658337+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.659061+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.665607+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:16.667536+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.667658+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.667699+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:16.669465+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:16.675002+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:16.676043+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:16.676399+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:17.160190+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:17.160819+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:17.160882+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.160935+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.161485+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.166094+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:17.166920+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.167039+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.167080+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:17.168919+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:17.173554+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:17.174736+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:17.175116+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:23.345562+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:23.347275+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:23.347358+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.347414+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.348382+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.354225+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:23.355260+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.355390+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.355433+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:23.357149+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:23.362458+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:23.364158+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:23.364660+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:24.223556+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-28T19:41:24.224404+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-28T19:41:24.224483+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.224541+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.225117+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.229057+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-28T19:41:24.230947+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.231083+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.231127+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-28T19:41:24.232476+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-28T19:41:24.237037+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:24.238097+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-28T19:41:24.238512+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:31.649321+00:00] php.INFO: User Deprecated: Class "Symfony\Component\HttpClient\CurlHttpClient" should implement method "Symfony\Contracts\HttpClient\HttpClientInterface::withOptions(array $options)": Returns a new instance of the client with new default options. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Class \"Symfony\\Component\\HttpClient\\CurlHttpClient\" should implement method \"Symfony\\Contracts\\HttpClient\\HttpClientInterface::withOptions(array $options)\": Returns a new instance of the client with new default options. at /Users/rapaelec/Documents/reactmaterial/api/vendor/symfony/error-handler/DebugClassLoader.php:387)"} []
[2021-04-29T12:03:31.785677+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:31.797566+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:31.798068+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:31.858630+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:03:31.959497+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:32.117918+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:03:32.152843+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.154200+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.154618+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.247344+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.248484+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.248870+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.277348+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:32.280166+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:32.280226+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.280278+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.290241+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.296767+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:32.298208+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.298317+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.298372+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:32.350914+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:32.374033+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.375131+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:32.375503+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:37.041762+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:37.042996+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:37.043050+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.043104+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.044467+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.050489+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:37.051296+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.051440+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.051481+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:37.054191+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:37.059694+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:37.060669+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:37.061017+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:38.849701+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:38.850250+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:38.850301+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.850350+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.850799+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.854169+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:38.854806+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.854905+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.854944+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:38.855970+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:38.860409+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:38.861685+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:38.862110+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:39.622763+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:39.623349+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:39.623404+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.623454+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.623937+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.627088+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:39.627670+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.627766+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.627805+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:39.628786+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:39.633089+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:39.634411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:39.634837+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:40.744245+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:40.745272+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:40.745320+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.745367+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.746020+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.750551+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:40.751315+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.751433+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.751473+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:40.753025+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:40.758442+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:40.759479+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:40.759820+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:41.890187+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:41.890788+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:41.890842+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.890892+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.891355+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.894477+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:41.895053+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.895144+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.895182+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:41.896138+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:41.900287+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:41.901353+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:41.901691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:42.718231+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:42.718785+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:42.718833+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.718881+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.719317+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.722298+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:42.722839+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.722924+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.722962+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:42.723862+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:42.727665+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:42.728756+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:42.729157+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:46.362152+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:46.363055+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:46.363100+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.363142+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.363740+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.367600+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:46.368219+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.368322+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.368356+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:46.369678+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:46.373842+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:46.374748+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:46.375037+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.062958+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:49.064063+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:49.065451+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.065571+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.066578+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.072125+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:49.072936+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.073068+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.073113+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.074854+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:49.080024+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.081014+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.081363+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.722639+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:03:49.723199+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:03:49.723252+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.723302+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.723753+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.727003+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:03:49.727606+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.727703+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.727741+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:03:49.728742+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:03:49.732676+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.733859+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:03:49.734298+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:04:30.582402+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:04:30.583421+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:04:30.583475+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.583522+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.584224+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.589213+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:04:30.590001+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.590120+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.590159+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:04:30.591682+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:04:30.596618+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:04:30.597744+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:04:30.598129+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:14.920344+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:05:14.921315+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:05:14.921366+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.921416+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.922067+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.926393+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:05:14.927062+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.927174+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.927212+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:14.928720+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:05:14.933845+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:14.935022+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:14.935393+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:20.020010+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:05:20.020968+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:05:20.021021+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.021064+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.021672+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.025563+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:05:20.026195+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.026298+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.026335+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:20.027662+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:05:20.031945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:20.032871+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:20.033161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:23.913236+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:05:23.914282+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:05:23.914339+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.914391+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.915103+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.919721+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:05:23.920457+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.920595+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.920640+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:05:23.922318+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:05:23.928148+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:23.929285+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:05:23.929639+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:01.889682+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:01.894252+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:01.894354+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.894433+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.896210+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.910418+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:01.911663+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.911889+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.911950+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:01.915111+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:01.923615+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:01.925855+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:01.926357+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:10.818959+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:10.820666+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:10.820765+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.820836+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.822901+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.832681+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:10.833930+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.834114+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.834163+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:10.836976+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:10.845673+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:10.847818+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:10.848974+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:13.786365+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:13.787311+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:13.787359+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.787404+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.788061+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.792188+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:13.792830+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.792936+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.792971+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:13.794355+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:13.798718+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:13.799675+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:13.799981+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:15.068435+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:15.069125+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:15.069201+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.069263+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.069776+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.072954+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:15.073573+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.073694+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.073736+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:15.074807+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:15.079446+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:15.080609+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:15.081030+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:17.096599+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:17.097654+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:17.097706+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.097755+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.098464+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.103150+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:17.103863+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.103989+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.104030+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:17.105629+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:17.110893+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:17.112168+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:17.112607+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.081521+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:18.082096+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:18.082150+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.082201+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.082670+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.085890+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:18.086542+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.086646+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.086685+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.087696+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:18.091684+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.092786+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.093179+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.957305+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:18.957871+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:18.957923+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.957970+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.958406+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.961719+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:18.962347+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.962454+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.962494+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:18.963497+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:18.967318+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.968214+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:18.968535+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:19.454827+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:06:19.455412+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:06:19.455468+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.455524+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.456015+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.459409+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:06:19.460000+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.460103+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.460143+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:06:19.461229+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:06:19.465786+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:19.467042+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:06:19.467536+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:15.328253+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:07:15.329297+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:07:15.329353+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.329399+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.330035+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.335578+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:07:15.336350+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.336515+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.336573+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:15.338217+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:07:15.343452+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:15.344493+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:15.344812+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:19.813279+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:07:19.814571+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:07:19.814651+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.814712+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.815542+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.820393+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:07:19.821158+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.821290+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.821333+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:07:19.823026+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:07:19.828774+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:19.829876+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:07:19.830257+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:19.259210+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:08:19.261192+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:08:19.261282+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.261343+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.263102+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.274956+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:08:19.275926+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.276156+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.276235+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:19.283159+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:08:19.292839+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:19.294512+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:19.295176+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:30.860269+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:30.861658+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:30.862042+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:30.893808+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:08:30.898923+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:08:31.034610+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:08:31.041763+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.042767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.043120+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.130534+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.131930+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.132359+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.162639+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:08:31.163206+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:08:31.163254+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.163301+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.164546+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.167807+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:08:31.168369+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.168458+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.168495+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:08:31.169928+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:08:31.173752+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.174649+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:08:31.174959+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:42.383990+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:20:42.385884+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:20:42.385977+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.386035+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.387548+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.394810+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:20:42.395735+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.395897+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.395937+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:42.397844+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:20:42.404665+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:42.406220+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:42.406718+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:55.649196+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:20:55.650483+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:20:55.650570+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.650633+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.651632+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.657892+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:20:55.659183+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.659348+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.659391+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:55.661956+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:20:55.668804+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:55.670209+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:55.670636+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:58.329825+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:20:58.330673+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:20:58.330716+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.330757+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.331342+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.335305+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:20:58.336055+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.336166+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.336200+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:20:58.337905+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:20:58.343744+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:58.345151+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:20:58.345596+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:24.952339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:21:24.953355+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:21:24.953414+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.953459+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.954065+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.958959+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:21:24.959663+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.959770+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.959803+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:24.961206+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:21:24.966012+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:24.967102+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:24.967464+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:41.722775+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:21:41.724852+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:21:41.724976+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.725062+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.726617+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.736788+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:21:41.738075+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.738317+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.738388+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:21:41.740922+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:21:41.747743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:41.751835+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:21:41.753172+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:22:58.936986+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:22:58.938799+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:22:58.938887+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.938951+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.940028+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.948252+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:22:58.949435+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.949603+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.949648+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:22:58.951872+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:22:58.965893+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:22:58.968062+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:22:58.969045+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.677152+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:23:12.684291+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:23:12.831455+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:23:12.839955+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.841077+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.841440+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.928861+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:23:12.930005+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:23:12.930134+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.930195+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.931144+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.934720+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:23:12.935386+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.935497+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.935537+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:12.937191+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:23:12.942588+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.943914+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:12.944479+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.230205+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:23:32.236057+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:23:32.372025+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:23:32.378687+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.379761+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.380160+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.451503+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:23:32.452387+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:23:32.452482+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.452541+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.453227+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.456919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:23:32.457920+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.458137+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.458204+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:23:32.460052+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:23:32.465263+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.466687+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:23:32.467598+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.728899+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:24:40.735633+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:24:40.877394+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:24:40.884097+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.885095+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.885493+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.953265+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:24:40.954044+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:24:40.954101+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.954147+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.954717+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.958294+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:24:40.958998+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.959108+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.959145+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:24:40.960847+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:24:40.966036+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.967348+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:24:40.967806+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:18.803111+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T12:25:18.811136+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:25:18.956434+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T12:25:18.967807+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:18.971130+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:18.971743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:19.062968+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:25:19.063799+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:25:19.063863+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.063917+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.065233+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.068988+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:25:19.069706+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.069817+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.069858+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:25:19.072026+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:25:19.077173+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:19.078481+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:25:19.079202+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:27:42.129278+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:27:42.130477+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:27:42.130540+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.130587+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.131866+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.138910+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:27:42.139792+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.139954+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.139998+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:27:42.142006+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:27:42.149771+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:27:42.157863+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:27:42.158465+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:15.562180+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:28:15.563326+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:28:15.563384+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.563429+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.564289+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.570068+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:28:15.570948+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.571165+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.571231+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:15.573640+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:28:15.579466+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:15.580666+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:15.581087+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:22.994077+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:28:22.995415+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:28:22.995532+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:22.995599+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:22.996375+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:23.001426+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:28:23.002335+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:23.002491+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:23.002547+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:23.004118+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:28:23.008743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:23.010185+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:23.010881+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:30.067420+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:28:30.069480+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:28:30.069619+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.069883+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.072120+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.096839+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:28:30.107674+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.108230+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.108374+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:28:30.112292+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:28:30.119428+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:30.122381+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:28:30.123535+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:34:07.290765+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:34:07.292707+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:34:07.292807+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.292898+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.294695+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.301127+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:34:07.301952+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.302095+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.302135+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:34:07.304164+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:34:07.312121+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:34:07.318431+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:34:07.318907+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:04.801606+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:35:04.803019+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:35:04.803102+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.803158+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.804133+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.810999+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:35:04.812016+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.812174+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.812220+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:04.814570+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:35:04.821539+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:04.822735+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:04.823188+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:45.144987+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:35:45.145913+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:35:45.145959+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.146004+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.146628+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.150931+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:35:45.151760+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.151882+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.151918+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:35:45.153435+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:35:45.159817+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:45.161397+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:35:45.162057+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:36:05.782755+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:36:05.783762+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:36:05.783814+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.783859+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.784480+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.788473+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:36:05.789236+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.789358+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.789395+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:36:05.790869+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:36:05.795887+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:36:05.797227+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:36:05.797669+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:38:23.073529+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:38:23.074869+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:38:23.074934+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.074981+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.075815+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.081076+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:38:23.081821+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.081950+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.081998+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:38:23.083744+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:38:23.088952+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:38:23.090136+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:38:23.090664+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:27.494863+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:42:27.496330+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:42:27.496396+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.496444+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.497301+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.502443+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:42:27.503159+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.503285+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.503321+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:27.505056+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:42:27.510338+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:27.511621+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:27.512173+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:58.499793+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:42:58.501370+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:42:58.501454+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.501502+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.502458+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.508101+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:42:58.508821+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.508947+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.508982+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:42:58.510679+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:42:58.516070+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:58.517383+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:42:58.518065+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:43:40.428469+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:43:40.429383+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:43:40.429429+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.429472+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.430080+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.434603+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:43:40.435518+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.435648+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.435689+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:43:40.437490+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:43:40.442502+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:43:40.443580+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:43:40.443923+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:17.444717+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:46:17.445861+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:46:17.445910+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.445955+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.447128+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.453623+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:46:17.454626+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.454783+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.454822+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:17.456895+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:46:17.464690+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:17.467397+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:17.467817+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:44.471904+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:46:44.473031+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:46:44.473083+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.473128+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.473935+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.479219+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:46:44.480117+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.480287+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.480330+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:46:44.482349+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:46:44.489002+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:44.490455+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:46:44.491556+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:22.006412+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:47:22.009351+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:47:22.009503+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.009567+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.010599+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.024911+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:47:22.026953+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.027774+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.027952+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:22.032679+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:47:22.042225+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:22.044048+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:22.044743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:25.954143+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:47:25.955136+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:47:25.955187+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.955234+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.955900+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.960659+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:47:25.961366+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.961481+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.961519+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:47:25.962986+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:47:25.967830+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:25.969615+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:47:25.970337+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:48:29.988007+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T12:48:29.989643+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T12:48:29.989710+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:29.989771+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:29.990980+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:29.998893+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T12:48:29.999909+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:30.000093+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:30.000146+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T12:48:30.002943+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T12:48:30.009058+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:48:30.010236+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T12:48:30.010619+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:12.087617+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:01:12.088691+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:01:12.088735+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.088777+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.090194+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.095713+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:01:12.096487+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.096627+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.096666+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:12.098883+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:01:12.105274+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:12.112871+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:12.113599+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:52.807269+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:01:52.808473+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:01:52.808522+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.808567+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.809423+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.814592+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:01:52.815386+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.815518+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.815556+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:01:52.817531+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:01:52.823813+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:52.825508+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:01:52.826115+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.622690+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.623903+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.624218+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.662975+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:04:52.663983+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:04:52.664090+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.664173+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.665594+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.674251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:04:52.675829+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.676154+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.676240+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:04:52.679550+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:04:52.685226+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.686604+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:04:52.687373+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:08:59.203125+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:08:59.204808+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:08:59.204909+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.204975+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.205914+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.211398+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:08:59.212175+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.212311+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.212348+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:08:59.214204+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:08:59.219760+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:08:59.221182+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:08:59.221789+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:14:30.830303+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:14:30.831387+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:14:30.831434+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.831478+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.832312+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.838224+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:14:30.839129+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.839301+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.839343+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:14:30.841242+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:14:30.846475+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:14:30.847473+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:14:30.847776+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:16:28.723909+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:16:28.726160+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:16:28.726227+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.726278+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.727292+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.733199+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:16:28.733888+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.734014+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.734051+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:16:28.736083+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:16:28.741459+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:16:28.742512+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:16:28.742839+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:18:35.562449+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:18:35.564735+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:18:35.564833+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.564893+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.566340+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.574079+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:18:35.574937+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.575076+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.575114+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:18:35.577145+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:18:35.585486+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:18:35.587423+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:18:35.588145+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.318433+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.319629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.319957+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.359501+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:21:02.360543+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:21:02.360616+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:02.360673+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:02.372359+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:02.376927+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:02.380529+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.381605+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:02.382010+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.490193+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.491755+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.492321+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.526187+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T13:21:14.532358+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:21:14.674066+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T13:21:14.681329+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.682396+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.682778+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.739561+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:21:14.740226+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:21:14.740277+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.740324+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.741041+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.744125+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:21:14.744662+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.744747+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.744782+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:14.746542+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:21:14.750565+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.751557+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:14.751874+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:25.464815+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:21:25.465981+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:21:25.466061+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.466113+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.466801+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.471403+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:21:25.472068+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.472202+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.472237+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:25.474270+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:21:25.479951+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:25.481052+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:25.481408+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:44.898421+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:21:44.899416+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:21:44.899466+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.899510+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.900276+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.905444+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:21:44.906102+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.906228+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.906264+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:21:44.907721+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:21:44.912582+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:44.913654+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:21:44.914172+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:22:28.659761+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:22:28.660652+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:22:28.660703+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.660746+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.661409+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.665883+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:22:28.666611+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.666729+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.666766+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:22:28.668759+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:22:28.675263+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:22:28.676337+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:22:28.676655+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:27:52.121295+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:27:52.122367+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:27:52.122414+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:27:52.122458+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:27:52.123257+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:27:52.123521+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:27:52.127940+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:27:52.129201+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:27:52.129648+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:00.967057+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:00.968333+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:00.968754+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.002498+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T13:28:01.008028+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:28:01.145507+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T13:28:01.152025+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.153218+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.153625+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.212012+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:28:01.212676+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:28:01.212726+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.212773+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.213525+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.216609+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:28:01.217149+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.217232+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.217266+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:28:01.218997+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:28:01.223094+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.224040+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:28:01.224364+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:33:43.348013+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:33:43.349158+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:33:43.349208+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.349252+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.350070+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.355347+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:33:43.356328+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.356552+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.356591+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:33:43.359424+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:33:43.365619+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:33:43.366738+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:33:43.367107+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:26.746664+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:26.748346+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:26.748438+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.748505+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.751499+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.771160+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:26.774111+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.774684+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.774858+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:26.788442+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:26.840762+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:26.843594+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:26.844382+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.263486+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:27.264157+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:27.264225+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.264277+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.264801+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.268982+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:27.269975+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.270116+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.270160+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.271361+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:27.277963+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.279299+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.279814+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.720035+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:27.720613+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:27.720665+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.720708+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.721112+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.724299+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:27.725143+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.725241+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.725276+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:27.726152+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:27.729644+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.730561+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:27.730845+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:28.455767+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:28.456355+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:28.456408+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.456460+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.456869+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.460542+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:28.461873+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.462035+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.462085+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:28.463300+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:28.468717+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:28.469760+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:28.470095+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:29.840497+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:29.841726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:29.841789+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.841841+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.842552+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.848013+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:29.848793+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.848924+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.848966+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:29.850737+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:29.858811+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:29.861445+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:29.862169+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:31.289510+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:31.289981+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:31.290024+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.290065+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.290438+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.293055+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:31.293508+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.293586+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.293617+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:31.294449+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:31.297823+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:31.299150+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:31.299620+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:32.142424+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:32.143428+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:32.143489+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.143552+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.144219+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.148222+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:32.149123+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.149248+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.149285+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:32.150750+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:32.156508+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:32.160562+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:32.161079+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:33.498977+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:33.499469+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:33.499513+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.499554+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.499942+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.503071+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:33.503635+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.503733+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.503766+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:33.504717+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:33.508285+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:33.509267+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:33.509577+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:34.670127+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:34.671873+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:34.672088+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.672268+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.673368+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.679124+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:34.680076+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.680205+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.680250+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:34.681362+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:34.685907+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:34.687365+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:34.687969+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:40.426562+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:40.427674+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:40.427731+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.427775+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.428590+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.433702+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:40.434367+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.434484+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.434517+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:40.436199+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:40.441222+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:40.442179+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:40.442465+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:42.715999+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:42.716504+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:42.716549+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.716590+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.716982+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.719895+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:42.720453+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.720546+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.720579+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:42.721472+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:42.725399+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:42.726564+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:42.726937+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:43.901017+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:43.902033+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:43.902091+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.902138+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.902819+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.907816+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:43.908508+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.908628+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.908666+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:43.910231+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:43.916327+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:43.917517+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:43.917949+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:45.428950+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:42:45.429582+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:42:45.429688+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.429768+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.430406+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.433955+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:42:45.434509+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.434606+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.434644+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:42:45.435644+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:42:45.439686+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:45.440717+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:42:45.441056+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:43:33.962192+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:43:33.963176+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:43:33.963226+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.963273+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.963917+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.968346+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:43:33.969257+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.969386+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.969425+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:43:33.971003+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:43:33.976343+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:43:33.977575+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:43:33.978019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:49:32.883834+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:49:32.885181+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:49:32.885253+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.885310+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.886672+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.894757+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:49:32.895543+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.895687+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.895727+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:49:32.897700+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:49:32.904365+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:49:32.907549+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:49:32.908240+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:50:23.470688+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:50:23.471925+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:50:23.471985+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.472033+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.472981+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.479628+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:50:23.480942+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.481301+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.481370+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:50:23.483797+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:50:23.489465+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:50:23.490666+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:50:23.491064+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:54.731255+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:54:54.732384+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:54:54.732442+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.732491+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.733572+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.739171+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:54:54.740018+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.740235+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.740286+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:54.742348+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:54:54.748430+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:54.749965+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:54.753200+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.009312+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.011365+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.012159+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.050937+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:54:59.051700+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:54:59.051762+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.051823+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.052565+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.057027+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:54:59.057760+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.057892+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.057933+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:54:59.059618+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:54:59.064650+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.065848+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:54:59.066376+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:56:56.343064+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:56:56.344049+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:56:56.344103+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.344145+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.344959+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.350557+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:56:56.351309+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.351449+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.351488+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:56:56.353426+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:56:56.359776+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:56:56.360967+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:56:56.361354+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:58:56.820634+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:58:56.821754+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:58:56.821807+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.821851+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.822753+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.829126+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:58:56.830026+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.830196+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.830238+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:58:56.832453+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:58:56.838096+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:58:56.839262+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:58:56.839732+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.088577+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:59:22.089939+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:59:22.089997+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.090046+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.090929+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.096103+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:59:22.096794+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.096920+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.096957+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.098951+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:59:22.105276+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.106368+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.106676+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.786631+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T13:59:22.787368+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T13:59:22.787432+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.787488+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.788032+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.791379+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T13:59:22.791945+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.792045+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.792087+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T13:59:22.793091+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T13:59:22.797017+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.797955+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T13:59:22.798295+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:28.669774+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:05:28.670900+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:05:28.670954+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.670999+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.671830+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.678592+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:05:28.679424+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.679569+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.679608+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:28.681515+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:05:28.687587+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:28.689513+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:28.690197+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:56.864910+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:05:56.866072+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:05:56.866124+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.866170+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.866985+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.872668+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:05:56.873384+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.873516+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.873554+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:05:56.875402+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:05:56.881149+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:56.882489+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:05:56.882987+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:08:59.751859+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:08:59.753039+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:08:59.753099+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.753148+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.754034+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.759913+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:08:59.760838+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.760979+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.761016+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:08:59.762883+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:08:59.768310+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:08:59.769704+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:08:59.770499+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:10:22.618685+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:10:22.619835+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:10:22.619889+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.619936+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.620812+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.627390+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:10:22.628172+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.628314+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.628353+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:10:22.630296+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:10:22.636320+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:10:22.638059+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:10:22.638975+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:12:56.142278+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:12:56.143998+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:12:56.144079+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.144141+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.145677+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.152917+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:12:56.153695+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.153847+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.153889+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:12:56.155878+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:12:56.163340+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:12:56.165832+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:12:56.166691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:13:23.515133+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T14:13:23.516363+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T14:13:23.516419+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.516480+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.517485+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.526781+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T14:13:23.528269+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.528438+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.528485+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T14:13:23.530522+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T14:13:23.536655+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:13:23.537786+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T14:13:23.538161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.739597+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.745657+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.746147+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.783648+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:18:50.785197+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:18:50.785254+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:50.785305+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:50.791950+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:50.792490+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:50.798458+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.799734+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:50.800288+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:57.828866+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:57.829973+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:57.830306+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:57.863550+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T16:18:57.877184+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:18:58.016988+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T16:18:58.024588+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:58.025643+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:58.026029+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:58.085024+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:18:58.085682+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:18:58.085734+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.085781+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.086528+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.090590+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:18:58.091223+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.091312+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.091351+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:18:58.100464+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:18:58.111881+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:58.113610+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:18:58.113979+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.289818+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.291197+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.291685+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.333772+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:19:19.334565+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:19:19.334628+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:19.334678+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:19.335547+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:19.335841+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:19.339496+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.340598+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:19.340999+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.695172+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.696430+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.696800+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.735043+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T16:19:26.741047+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:19:26.886574+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T16:19:26.892781+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.893952+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.894487+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.972480+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:19:26.973147+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:19:26.973201+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.973250+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.973840+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.977089+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:19:26.977688+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.977784+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.977822+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:19:26.979688+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:19:26.984686+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.985872+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:19:26.986217+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:20:02.298841+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:20:02.299776+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:20:02.299844+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.299908+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.300799+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.305349+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:20:02.306247+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.306429+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.306480+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:20:02.308398+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:20:02.314790+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:20:02.315905+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:20:02.316481+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:21:37.252408+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:21:37.253561+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:21:37.253611+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.253658+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.254552+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.260301+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:21:37.261205+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.261385+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.261432+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:21:37.263842+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:21:37.270072+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:21:37.271247+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:21:37.271626+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:39.880391+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:22:39.881463+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:22:39.881515+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.881558+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.882531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.887966+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:22:39.888690+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.888819+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.888853+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:39.890547+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:22:39.896287+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:39.897614+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:39.898148+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:59.105960+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:22:59.106876+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:22:59.106927+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.106972+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.107594+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.111738+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:22:59.112397+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.112513+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.112549+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:22:59.114837+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:22:59.122120+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:59.123344+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:22:59.123808+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:45.040129+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:23:45.041030+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:23:45.041080+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.041122+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.041713+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.045893+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:23:45.046679+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.046804+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.046841+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:45.048564+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:23:45.054287+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:45.055606+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:45.056534+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:53.806090+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:23:53.807236+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:23:53.807290+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.807334+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.808215+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.815064+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:23:53.816034+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.816216+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.816265+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:23:53.818632+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:23:53.825472+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:53.826629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:23:53.826965+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:38:19.451445+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:38:19.452622+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:38:19.452674+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.452718+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.453545+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.459287+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:38:19.460118+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.460279+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.460323+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:38:19.462320+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:38:19.471193+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:38:19.472903+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:38:19.473387+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:45:07.828054+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:45:07.829529+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:45:07.829595+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.829644+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.830521+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.836028+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:45:07.836922+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.837079+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.837119+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:45:07.839097+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:45:07.845330+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:45:07.846802+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:45:07.847265+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:21.370863+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:46:21.371918+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:46:21.371962+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.372004+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.372767+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.378147+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:46:21.378872+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.379010+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.379049+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:21.381168+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:46:21.388151+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:21.389284+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:21.389751+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:48.095048+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T16:46:48.095988+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T16:46:48.096038+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.096082+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.096714+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.100843+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T16:46:48.101464+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.101570+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.101604+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T16:46:48.103155+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T16:46:48.110015+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:48.111657+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T16:46:48.119223+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.656717+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.659423+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.660257+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.706556+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:23:20.707721+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:23:20.707816+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:23:20.707894+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:23:20.709950+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:23:20.710408+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:23:20.715181+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.716602+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:23:20.717095+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:22.981235+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.003542+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.004374+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.042665+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T17:24:23.049636+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:24:23.193510+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T17:24:23.201828+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.203025+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.203448+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.271855+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:24:23.272738+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:24:23.272813+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.272872+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.273759+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.278468+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:24:23.279136+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.279241+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.279283+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:24:23.281678+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:24:23.286749+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.288003+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:24:23.288629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:16.765845+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:25:16.767353+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:25:16.767421+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.767470+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.768620+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.778627+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:25:16.780120+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.780294+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.780337+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:16.782986+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:25:16.793838+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:16.795043+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:16.795610+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.429140+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.430658+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.431191+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.503794+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:25:26.505796+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:25:26.505993+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:26.506125+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:26.507964+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:26.508386+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:25:26.514418+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.516429+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:25:26.517239+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.203966+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.205757+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.206140+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.241592+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T17:27:44.247571+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:27:44.387720+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T17:27:44.394791+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.395813+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.396178+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.474034+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:27:44.474789+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:27:44.474853+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.474905+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.476119+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.479935+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:27:44.480603+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.480707+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.480746+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:27:44.482642+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:27:44.487264+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.488403+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:27:44.488780+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.958433+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:01.959733+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:01.959855+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.959957+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.960941+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:01.961281+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.961556+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:01.961609+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.961660+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.962111+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.971919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:01.971919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:01.972976+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.972976+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.973151+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.973159+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.973206+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.973222+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:01.975005+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:01.975017+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:01.983454+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.983480+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.989529+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.989529+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.990116+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:01.990251+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:05.667486+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:05.669465+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:05.669560+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.669631+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.670804+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.679698+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:05.680874+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.681050+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.681108+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:05.683801+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:05.692504+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:05.693787+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:05.694177+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.128417+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:32.128417+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:32.129496+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:32.129488+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:32.129563+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.129587+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.129617+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.129672+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.130487+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.130507+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.135159+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:32.135159+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:32.136182+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.136258+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.136364+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.136377+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.136417+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.136430+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:32.138458+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:32.138458+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:32.143773+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.143780+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.144865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.144865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.145207+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:32.145214+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.917977+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:41.918337+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:41.919210+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:41.919272+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:41.919301+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.919354+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.919390+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.919455+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.920602+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.920602+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.928566+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:41.928570+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:41.929823+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.929823+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.930025+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.930048+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.930091+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.930125+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:41.932226+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:41.932226+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:41.937850+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.937845+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.938945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.938945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.939363+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:41.939365+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:44.030083+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:44.031129+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:44.031185+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.031236+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.031943+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.037483+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:44.038205+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.038332+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.038374+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:44.040148+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:44.045741+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:44.046808+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:44.047153+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:46.905955+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:46.906517+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:46.906584+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.906643+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.907175+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.912399+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:46.913223+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.913382+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.913437+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:46.914853+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:46.921329+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:46.925675+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:46.926240+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:48.915879+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:48.917406+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:48.917478+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.917533+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.918433+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.924530+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:48.925469+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.925647+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.925721+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:48.928525+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:48.936928+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:48.938111+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:48.938538+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:58.230435+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:29:58.231739+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:29:58.231811+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.231860+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.232686+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.238739+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:29:58.239640+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.239796+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.239836+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:29:58.241751+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:29:58.249154+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:58.250369+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:29:58.250767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:06.930200+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:30:06.931878+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:30:06.931965+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.932024+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.933278+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.938804+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:30:06.939436+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.939549+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.939587+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:06.941114+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:30:06.949661+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:06.951601+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:06.952423+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:35.575761+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:30:35.590220+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:30:35.611224+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.611775+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.613010+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.622025+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:30:35.639102+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.639683+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.639744+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:30:35.641861+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:30:35.650549+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:35.651801+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:30:35.652273+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:31:43.328815+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:31:43.329860+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:31:43.329914+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.330009+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.330806+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.336562+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:31:43.337686+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.337839+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.337880+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:31:43.339552+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:31:43.345629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:31:43.348656+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:31:43.349964+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:32:04.456755+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:32:04.457883+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:32:04.457949+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.457997+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.458811+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.465338+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:32:04.466271+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.466436+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.466486+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:32:04.468573+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:32:04.475672+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:32:04.476805+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:32:04.477282+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:33:11.608998+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:33:11.610347+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:33:11.610414+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.610463+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.611301+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.616772+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:33:11.617559+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.617678+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.617717+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:33:11.619570+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:33:11.625145+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:33:11.626689+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:33:11.627381+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:34:25.811732+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:34:25.813003+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:34:25.813068+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.813118+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.814016+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.820904+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:34:25.822284+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.822655+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.822731+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:34:25.825873+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:34:25.858685+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:34:25.862871+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:34:25.866795+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:11.119832+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:35:11.121016+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:35:11.121078+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.121125+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.121833+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.127581+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:35:11.128461+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.128606+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.128651+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:11.130821+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:35:11.138000+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:11.140066+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:11.140762+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:46.244722+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:35:46.246801+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:35:46.247016+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.247729+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.249093+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.254485+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:35:46.255287+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.255482+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.255539+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:35:46.257326+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:35:46.264947+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:46.266389+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:35:46.266881+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:04.554112+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:37:04.555106+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:37:04.555152+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.555195+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.555931+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.560945+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:37:04.561770+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.561906+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.561947+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:04.563999+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:37:04.572892+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:04.576132+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:04.576677+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:49.064391+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:37:49.065492+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:37:49.065538+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.065581+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.066370+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.072048+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:37:49.072804+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.072944+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.072982+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:37:49.074993+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:37:49.084993+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:49.086454+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:37:49.086941+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:38:57.529711+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:38:57.530850+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:38:57.530901+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.530945+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.531615+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.536493+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:38:57.537427+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.537589+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.537631+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:38:57.539682+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:38:57.547124+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:38:57.548359+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:38:57.549089+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.926996+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.928063+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.928421+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.974678+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:39:01.975566+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:39:01.975630+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.975682+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.976535+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.982880+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:39:01.983579+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.983710+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.983754+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:01.985387+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:39:01.990659+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.996469+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:01.997200+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:22.176398+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:39:22.177374+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:39:22.177429+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.177474+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.178232+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.182792+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:39:22.183632+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.183778+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.183816+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:22.186081+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:39:22.192277+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:22.194603+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:22.196950+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:38.914255+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:39:38.915285+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:39:38.915338+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.915383+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.916535+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.922197+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:39:38.922972+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.923115+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.923156+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:38.925703+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:39:38.935152+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:38.936871+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:38.937451+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:58.855852+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:39:58.856955+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:39:58.857002+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.857046+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.858108+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.865647+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:39:58.866584+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.866767+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.866814+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:39:58.869935+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:39:58.878664+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:58.879950+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:39:58.880385+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:20.001128+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:42:20.002868+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:42:20.002945+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.003004+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.004570+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.019397+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:42:20.024433+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.024674+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.024737+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:20.028035+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:42:20.034819+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:20.036428+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:20.036819+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:39.290033+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:42:39.291444+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:42:39.291500+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.291545+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.292436+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.299805+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:42:39.300969+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.301189+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.301243+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:42:39.303575+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:42:39.311454+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:39.312756+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:42:39.313162+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:16.439808+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:43:16.441000+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:43:16.441068+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.441116+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.441910+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.447211+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:43:16.448938+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.449088+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.449129+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:16.451280+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:43:16.457746+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:16.458923+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:16.459278+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:51.630469+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:43:51.631349+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:43:51.631408+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.631450+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.632049+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.636122+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:43:51.636698+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.636804+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.636839+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:43:51.638322+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:43:51.643974+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:51.645363+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:43:51.645874+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:05.454494+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:44:05.455464+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:44:05.455517+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.455561+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.456184+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.460936+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:44:05.461698+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.461824+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.461860+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:05.463823+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:44:05.471429+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:05.472513+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:05.472876+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:23.939185+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:44:23.941666+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:44:23.941784+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.941885+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.943197+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.951345+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:44:23.952901+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.953335+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.953422+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:44:23.956237+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:44:23.971230+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:23.976743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:44:23.977892+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:45:50.591379+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:45:50.592513+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:45:50.592560+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.592605+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.593474+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.599732+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:45:50.600754+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.601042+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.601108+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:45:50.603149+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:45:50.610289+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:45:50.611650+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:45:50.612133+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:48:59.974836+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:48:59.977505+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:48:59.977627+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:48:59.977725+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:48:59.980017+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.019339+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:49:00.021251+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:49:00.021338+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.021402+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.022124+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.044471+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:49:00.044508+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:49:00.067695+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.067900+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.067955+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.070031+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.070207+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.070278+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:00.071119+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:49:00.072078+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:49:00.083793+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:00.083793+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:00.085862+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:00.085862+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:00.086568+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:00.086558+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:03.924313+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:49:03.925354+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:49:03.925410+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.925459+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.926142+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.932875+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:49:03.933696+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.933839+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.933879+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:03.937026+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:49:03.945153+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:03.946640+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:03.947153+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:50.310170+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:49:50.311841+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:49:50.311948+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.312036+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.313203+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.321602+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:49:50.322499+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.322643+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.322687+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:49:50.325234+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:49:50.334000+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:50.335617+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:49:50.336370+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:01.367074+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:50:01.368132+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:50:01.368187+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.368235+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.368884+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.373328+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:50:01.374357+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.374501+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.374544+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:01.376778+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:50:01.386587+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:01.388188+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:01.388772+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:49.830715+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:50:49.831641+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:50:49.831688+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.831732+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.832352+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.836449+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:50:49.837183+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.837306+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.837344+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:50:49.839236+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:50:49.845250+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:49.847535+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:50:49.848865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:51:28.701287+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:51:28.707042+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:51:28.707147+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.707229+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.708539+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.717284+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:51:28.733449+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.733778+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.733851+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:51:28.736952+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:51:28.744991+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:51:28.746801+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:51:28.747355+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:54:20.617934+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:54:20.619090+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:54:20.619144+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.619189+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.620394+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.626441+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:54:20.627178+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.627314+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.627351+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:54:20.629643+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:54:20.640868+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:54:20.642556+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:54:20.643821+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:27.466439+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:56:27.467603+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:56:27.467655+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.467701+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.468919+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.474931+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:56:27.475667+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.475803+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.475841+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:27.477790+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:56:27.486488+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:27.489967+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:27.490672+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:58.522937+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:56:58.524050+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:56:58.524100+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.524147+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.524959+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.530204+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:56:58.530867+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.530988+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.531022+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:56:58.533056+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:56:58.540130+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:58.541539+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:56:58.542612+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:58:49.466682+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T17:58:49.468057+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T17:58:49.468128+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.468176+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.469436+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.475273+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T17:58:49.475942+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.476066+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.476103+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T17:58:49.477817+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T17:58:49.484723+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:58:49.487870+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T17:58:49.488942+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:06:02.939901+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:06:02.940980+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:06:02.941027+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.941070+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.941864+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.947451+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:06:02.948147+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.948285+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.948323+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:06:02.950249+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:06:02.956669+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:06:02.958876+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:06:02.959687+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:30.546075+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:07:30.547157+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:07:30.547199+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.547238+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.548012+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.552720+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:07:30.553358+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.553471+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.553502+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:30.555277+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:07:30.563105+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:30.564826+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:30.565301+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:56.955135+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:07:56.956036+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:07:56.956082+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.956125+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.956721+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.961219+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:07:56.961834+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.961945+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.961983+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:07:56.963809+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:07:56.968865+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:56.970411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:07:56.971161+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:06.117098+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:09:06.118000+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:09:06.118049+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.118093+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.118707+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.122731+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:09:06.123364+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.123505+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.123552+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:06.125162+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:09:06.129799+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:06.130795+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:06.131171+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:24.451094+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:09:24.452200+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:09:24.452250+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.452294+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.453103+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.458441+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:09:24.459186+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.459327+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.459401+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:24.461474+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:09:24.469945+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:24.471922+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:24.472409+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:50.513816+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:09:50.515011+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:09:50.515076+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.515123+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.515966+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.521030+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:09:50.521698+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.521823+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.521859+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:09:50.523804+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:09:50.532247+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:50.534078+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:09:50.534596+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:18:29.551948+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:18:29.558161+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:18:29.558275+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.558368+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.560521+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.572484+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:18:29.573880+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.574081+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.574229+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:18:29.576791+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:18:29.586827+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:18:29.588708+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:18:29.589211+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:17.951684+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:19:17.954105+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:19:17.954215+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.954298+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.956276+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.969917+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:19:17.973496+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.973741+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.973807+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:17.977418+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:19:17.991248+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:17.995067+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:17.995689+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:21.040286+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:19:21.041636+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:19:21.041757+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.041863+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.043172+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.049758+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:19:21.050621+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.050774+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.050821+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:21.052717+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:19:21.061362+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:21.063251+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:21.063944+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:23.969798+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:19:23.970467+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:19:23.970530+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.970591+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.971204+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.975963+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:19:23.976859+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.977051+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.977119+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:23.979111+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:19:23.985801+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:23.987273+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:23.988002+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:30.906383+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:19:30.907488+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:19:30.907560+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.907615+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.908429+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.913632+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:19:30.914450+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.914590+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.914635+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:30.916568+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:19:30.924187+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:30.925505+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:30.926046+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:37.774793+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:19:37.776184+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:19:37.776260+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.776318+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.777126+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.781828+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:19:37.782518+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.782638+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.782676+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:19:37.784484+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:19:37.789768+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:37.791022+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:19:37.791634+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.071817+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.073718+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.074152+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.118496+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:25:33.119378+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:25:33.119444+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.119502+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.120901+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.128399+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:25:33.129271+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.129435+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.129480+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:25:33.132014+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:25:33.140434+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.142472+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:25:33.143281+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:00.019650+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:34:00.021013+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:34:00.021076+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:00.021129+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:00.022712+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:00.023202+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:00.028854+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:00.030023+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:00.030381+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:06.885777+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:06.887367+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:06.888053+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:06.924913+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T18:34:06.931067+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:34:07.075642+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T18:34:07.082767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:07.083767+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:07.084347+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:07.168999+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:34:07.169712+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:34:07.169768+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.169820+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.170617+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.174138+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:34:07.174758+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.174848+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.174886+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:34:07.176822+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:34:07.181579+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:07.182731+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:34:07.183068+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:35:54.653539+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:35:54.654508+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:35:54.654563+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.654614+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.655272+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.659852+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:35:54.660631+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.660761+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.660800+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:35:54.662926+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:35:54.668485+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:35:54.669519+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:35:54.669876+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:04.897075+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:36:04.898120+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:36:04.898168+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.898214+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.898921+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.903528+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:36:04.904191+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.904317+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.904353+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:04.905814+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:36:04.910904+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:04.912157+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:04.912699+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.840084+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.841242+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.841561+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.887879+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:36:09.888874+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:36:09.888990+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.889167+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.890797+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.897589+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:36:09.898572+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.898716+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.898759+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:09.901488+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:36:09.910949+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.912384+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:09.913013+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.569146+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.570346+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.570731+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.614373+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:36:21.615118+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:36:21.615179+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.615234+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.616151+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.656317+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:36:21.658619+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.658846+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.658901+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:21.661706+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:36:21.669231+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.674715+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:21.679787+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:45.990570+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:45.993135+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:45.993569+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:46.033886+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:36:46.034922+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:36:46.035020+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.035083+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.035926+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.045664+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:36:46.046814+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.046978+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.047024+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:36:46.049500+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:36:46.055197+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:46.057220+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:36:46.058163+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:37:31.672902+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:37:31.673861+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:37:31.673907+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.673950+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.675097+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.679919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:37:31.680624+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.680747+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.680783+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:37:31.682217+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:37:31.686908+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:37:31.687860+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:37:31.688138+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:38:22.016112+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:38:22.024516+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:38:22.024624+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.024714+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.025539+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.031343+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:38:22.032472+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.032684+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.032741+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:38:22.035372+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:38:22.044498+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:38:22.045770+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:38:22.046232+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:39:52.478147+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:39:52.479345+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:39:52.479397+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.479443+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.480677+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.486635+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:39:52.487365+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.487498+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.487536+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:39:52.489768+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:39:52.497772+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:39:52.504116+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:39:52.504692+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:40:42.964059+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:40:42.965195+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:40:42.965244+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.965290+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.966147+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.971576+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:40:42.972348+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.972490+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.972528+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:40:42.974677+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:40:42.980554+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:40:42.981912+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:40:42.982366+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:41:50.666560+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:41:50.667834+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:41:50.667887+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.667930+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.668556+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.673181+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:41:50.673941+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.674060+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.674094+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:41:50.675611+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:41:50.680776+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:41:50.681927+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:41:50.682325+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:05.424007+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:45:05.425337+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:45:05.425406+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.425457+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.426326+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.431920+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:45:05.432690+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.432820+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.432856+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:05.434784+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:45:05.442421+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:05.443666+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:05.444094+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:37.981214+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T18:45:37.982389+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T18:45:37.982441+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.982488+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.983364+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.989646+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T18:45:37.990353+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.990482+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.990519+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T18:45:37.992446+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T18:45:37.998264+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:37.999647+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T18:45:38.000061+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:08:54.323016+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:08:54.324214+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:08:54.324265+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.324311+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.325584+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.334717+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:08:54.335935+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.336314+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.336450+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:08:54.339855+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:08:54.349640+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:08:54.371594+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:08:54.372491+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:09:34.128936+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:09:34.130322+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:09:34.130425+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.130504+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.132180+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.138389+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:09:34.139099+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.139227+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.139264+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:09:34.141070+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:09:34.146641+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:09:34.148288+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:09:34.148861+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:31.665014+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:11:31.666822+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:11:31.666896+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.666951+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.669293+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.700412+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:11:31.703256+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.704367+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.704438+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:31.717187+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:11:31.729691+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:31.733077+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:31.733535+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:41.703814+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:11:41.705226+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:11:41.705314+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.705368+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.706512+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.712592+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:11:41.713384+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.713527+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.713566+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:11:41.715918+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:11:41.722082+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:41.723355+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:11:41.723731+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:28.106976+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:13:28.108345+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:13:28.108402+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.108446+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.109048+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.113206+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:13:28.113906+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.114026+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.114064+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:28.115542+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:13:28.121391+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:28.122555+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:28.122898+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:30.967708+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:30.968759+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:30.969116+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:31.017466+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:13:31.018698+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:13:31.018768+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.018822+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.019745+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.027598+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:13:31.028861+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.029038+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.029088+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:13:31.031653+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:13:31.038893+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:31.040452+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:13:31.041109+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:16:41.936909+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:16:41.938194+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:16:41.938372+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.938488+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.940400+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.947932+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:16:41.948803+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.948967+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.949009+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:16:41.951377+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:16:41.958012+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:16:41.960495+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:16:41.961384+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.697857+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.700264+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.701006+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.754780+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:22:20.756390+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:22:20.756493+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.756560+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.758703+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.766103+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:22:20.767223+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.767386+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.767430+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:22:20.770761+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:22:20.779016+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.780261+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:22:20.780673+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.490932+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.492421+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.492797+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.532002+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:24:08.533088+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:24:08.533192+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.533281+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.534490+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.540827+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:24:08.541994+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.542142+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.542187+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:08.544058+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:24:08.549113+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.550563+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:08.551025+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:23.710354+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:24:23.711555+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:24:23.711606+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.711654+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.712893+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.719710+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:24:23.720610+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.720779+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.720820+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:24:23.723482+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:24:23.730527+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:23.732019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:24:23.732502+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:30:27.666835+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:30:27.668152+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:30:27.668217+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.668266+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.669554+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.677606+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:30:27.678466+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.678617+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.678658+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:30:27.681005+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:30:27.689547+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:30:27.694475+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:30:27.696455+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:22.992952+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:31:22.994190+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:31:22.994261+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:22.994308+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:22.995531+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:23.001221+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:31:23.001997+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:23.002129+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:23.002165+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:23.004279+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:31:23.012642+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:23.018311+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:23.018919+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.114233+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.115559+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.115938+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.158266+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:31:55.159660+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:31:55.159747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.159808+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.160874+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.167466+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:31:55.168699+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.168856+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.168912+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:55.171869+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:31:55.178719+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.180348+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:55.181254+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.100627+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.101840+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.102286+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.144553+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:31:59.145437+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:31:59.145503+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:59.145557+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:59.146306+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:59.146703+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:31:59.150198+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.151305+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:31:59.151730+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.029975+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.031417+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.031846+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.066216+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T19:32:07.076186+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:32:07.226693+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T19:32:07.242646+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.243812+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.244214+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.311271+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:32:07.311917+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:32:07.311968+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.312017+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.312716+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.316007+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:32:07.316656+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.316753+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.316792+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:32:07.318319+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:32:07.322470+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.323445+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:32:07.323797+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:09.989063+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:09.992361+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:09.993780+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:10.060427+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:33:10.061437+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:33:10.061509+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.061570+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.063526+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.069872+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:33:10.071722+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.071967+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.072064+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:33:10.075196+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:33:10.081251+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:10.082429+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:33:10.082840+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:23.326831+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:34:23.328180+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:34:23.328245+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:23.328294+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:23.329895+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /Users/rapaelec/Documents/reactmaterial/api/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:113)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:23.330275+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:23.336408+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:23.341574+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:23.342201+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.363429+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.364777+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.365685+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.404535+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T19:34:31.411439+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:34:31.566869+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T19:34:31.573816+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.575244+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.575874+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.687093+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:34:31.688373+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:34:31.688457+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.688520+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.689699+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.693858+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:34:31.694631+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.694735+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.694779+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:34:31.696647+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:34:31.701525+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.702711+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:34:31.703111+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:13.684350+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:40:13.685575+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:40:13.685634+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.685683+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.687146+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.695045+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:40:13.695883+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.696030+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.696069+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:13.698600+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:40:13.706411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:13.708802+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:13.709403+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:20.575149+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:40:20.576593+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:40:20.576659+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.576711+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.578241+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.585510+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:40:20.586489+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.586702+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.586794+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:40:20.590011+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:40:20.598055+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:20.599299+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:40:20.599985+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:43:32.057703+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:43:32.059304+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:43:32.059373+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.059423+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.060727+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.066702+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:43:32.067666+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.067885+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.067973+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:43:32.070408+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:43:32.076900+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:43:32.078434+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:43:32.079095+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:44:01.162931+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:44:01.164566+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:44:01.164661+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.164720+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.166571+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.192417+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:44:01.209925+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.210228+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.210309+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:44:01.214411+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:44:01.226384+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:44:01.239310+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:44:01.239901+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:45:31.502605+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:45:31.504060+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:45:31.504132+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.504187+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.505279+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.511022+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:45:31.511886+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.512022+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.512063+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:45:31.514032+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:45:31.520411+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:45:31.523204+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:45:31.523714+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:49:37.957335+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:49:37.958626+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:49:37.958692+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.958752+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.960549+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.969233+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:49:37.970491+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.970714+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.970788+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:49:37.974087+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:49:37.982846+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:49:37.985004+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:49:37.987036+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:50:28.816238+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T19:50:28.818749+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T19:50:28.818848+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.819098+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.821233+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.846331+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T19:50:28.848754+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.848992+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.849040+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T19:50:28.852518+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T19:50:28.870144+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:50:28.878842+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T19:50:28.906101+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.648645+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.661047+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.667128+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.705936+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:00:25.706940+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:00:25.707023+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.707095+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.708767+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.717949+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:00:25.719326+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.719571+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.719628+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:00:25.722357+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:00:25.729661+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.732019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:00:25.732983+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:01:47.698309+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:01:47.699771+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:01:47.699837+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.699885+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.701154+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.710627+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:01:47.711648+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.711860+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.711924+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:01:47.715038+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:01:47.732855+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:01:47.735050+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:01:47.736516+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:02:57.835070+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:02:57.837361+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:02:57.837470+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.837545+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.839188+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.847697+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:02:57.855879+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.856098+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.856157+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:02:57.858247+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:02:57.867427+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:02:57.869726+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:02:57.870450+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:12.599970+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:04:12.601214+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:04:12.601269+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.601315+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.602241+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.610932+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:04:12.611912+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.612135+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.612185+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:12.614882+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:04:12.626276+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:12.628394+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:12.629186+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.145953+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.148471+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.148832+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.182012+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2021-04-29T20:04:37.187546+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:04:37.334030+00:00] security.INFO: User has been authenticated successfully. {"username":"rapaelec@gmail.com"} []
[2021-04-29T20:04:37.341743+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.342988+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.343588+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.425962+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.426975+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.427404+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.456615+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:04:37.457183+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:04:37.457231+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.457277+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.458367+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.461833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:04:37.462400+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.462488+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.462526+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:37.463999+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:04:37.467942+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.468855+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:37.469239+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:44.758917+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:04:44.759907+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:04:44.759963+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.760010+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.760666+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.766015+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:04:44.767033+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.767181+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.767224+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:04:44.768812+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:04:44.774268+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:44.776178+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:04:44.776800+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:11:37.617980+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:11:37.630351+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:11:37.630421+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.630490+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.636090+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.670431+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:11:37.672330+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.672664+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.672747+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:11:37.686120+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:11:37.710629+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:11:37.758376+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:11:37.769180+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:12.485667+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:13:12.488248+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:13:12.488297+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.488344+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.489775+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.497731+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:13:12.498803+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.498947+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.498981+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:12.501532+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:13:12.509792+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:12.511019+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:12.511323+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:13.182872+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:13:13.183439+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:13:13.183493+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.183544+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.184027+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.187600+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:13:13.188377+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.188477+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.188516+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:13:13.189546+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:13:13.194262+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:13.195393+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:13:13.195736+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:14:51.111706+00:00] request.INFO: Matched route "api_users_get_item". {"route":"api_users_get_item","route_parameters":{"_route":"api_users_get_item","_controller":"api_platform.action.get_item","_format":null,"_stateless":null,"_api_resource_class":"App\\Entity\\User","_api_identifiers":["id"],"_api_has_composite_identifier":false,"_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/users/1","method":"GET"} []
[2021-04-29T20:14:51.112871+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2021-04-29T20:14:51.112943+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.113007+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.114199+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.130923+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["rapaelec@gmail.com"] []
[2021-04-29T20:14:51.131807+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"rapaelec@gmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.131934+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.131975+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2021-04-29T20:14:51.134089+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3 FROM user u0_ WHERE u0_.id = ? [1] []
[2021-04-29T20:14:51.145219+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:14:51.197732+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-04-29T20:14:51.198533+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
